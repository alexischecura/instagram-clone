generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  fullName    String   @db.VarChar(255)
  userName    String   @unique @db.VarChar(255)
  email       String   @unique @db.VarChar(255)
  password    String   @db.VarChar(32)
  phoneNumber String?  @db.VarChar(255)
  birthDate   DateTime

  profilePhoto String?   @db.VarChar(255)
  active       Boolean   @default(true)
  photos       Photo[]
  comments     Comment[]
  likes        Like[]
  Follower     Follow[]  @relation("Follower")
  Followee     Follow[]  @relation("Followee")

  verified             Boolean?  @default(false)
  verificationCode     String?   @unique @db.Text
  provider             String?
  passwordResetToken   String?
  passwordResetExpires DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email, verificationCode])
  @@map("users")
}

model Photo {
  id        String    @id @default(cuid())
  photoUrl  String    @db.VarChar(255)
  createdAt DateTime  @default(now())
  comments  Comment[]
  likes     Like[]
  tags      Tag[]

  User   User   @relation(fields: [userId], references: [id])
  userId String
}

model Comment {
  id        String   @id @default(cuid())
  comment   String
  createdAt DateTime @default(now())

  User    User   @relation(fields: [userId], references: [id])
  userId  String
  Photo   Photo  @relation(fields: [photoId], references: [id])
  photoId String
}

model Like {
  id        String   @id
  createdAt DateTime @default(now())

  User    User   @relation(fields: [userId], references: [id])
  userId  String @unique
  Photo   Photo  @relation(fields: [photoId], references: [id])
  photoId String

  @@unique([userId, photoId])
}

model Tag {
  id       String  @id @default(cuid())
  tag_name String  @unique @db.VarChar(255)
  Photos   Photo[]
}

model Follow {
  createdAt DateTime @default(now())

  follower   User   @relation("Follower", fields: [followerId], references: [id])
  followerId String
  followee   User   @relation("Followee", fields: [followeeId], references: [id])
  followeeId String

  @@unique([followerId, followeeId])
}
